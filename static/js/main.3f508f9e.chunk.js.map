{"version":3,"sources":["App.tsx","components/Checkbox.tsx","components/RangeInput.tsx","components/TextInput.tsx","GlobalStyles.ts","components/ThemeProvider.tsx","index.tsx"],"names":["Period","Amount","Wrapper","styled","div","theme","isActive","colors","orange","gray","Label","label","Checkbox","isChecked","onClick","e","icon","faCheck","faTimes","RangeTitle","h3","white","Units","span","OutputWrapper","Output","input","Range","Draggable","position","ProgressBar","HoverProgressBar","RangeInput","min","max","title","unit","onChange","step","useState","setPosition","hoverPosition","setHoverPosition","value","setValue","wrapperRef","useRef","hoverProgressBarRef","useEffect","wrapper","current","addEventListener","handleStartHover","removeEventListener","handleHover","handleStopHover","left","getBoundingClientRect","mousePosition","clientX","hoverBar","handleDrag","preventDefault","width","newPosition","DRAGGABLE_WIDTH","newValue","Math","floor","handleStopDrag","document","ref","onMouseDown","faAngleLeft","faAngleRight","Number","target","toFixed","type","Input","isDisabled","TextInput","disabled","InputWithUnits","Section","Subsection","Result","App","MIN","amount","setAmount","period","setPeriod","loanPercent","setLoanPercent","isPercentInputActive","setIsPercentInputActive","MAX","converted","prev","singleInstalment","calcLoanInstalment","GlobalStyle","createGlobalStyle","Theme","children","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.3f508f9e.chunk.js","sourcesContent":["import { FC, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Checkbox from \"./components/Checkbox\";\n\nimport RangeInput from \"./components/RangeInput\";\nimport TextInput from \"./components/TextInput\";\n\nenum Period {\n  MIN = 3,\n  MAX = 120,\n}\n\nenum Amount {\n  MIN = 500,\n  MAX = 100000,\n}\n\nconst App: FC = () => {\n  const [amount, setAmount] = useState<number>(Amount.MIN);\n  const [period, setPeriod] = useState<number>(Period.MIN);\n  const [loanPercent, setLoanPercent] = useState<number>(0);\n  const [isPercentInputActive, setIsPercentInputActive] = useState(true);\n\n  const handleValue = (value: number) => {\n    setAmount(value);\n  };\n\n  const handlePeriod = (value: number) => {\n    setPeriod(value);\n  };\n\n  const calcLoanInstalment = () => {\n    let singleInstalment = Math.floor(amount / period);\n\n    if (isPercentInputActive)\n      singleInstalment =\n        singleInstalment + singleInstalment * (loanPercent / 100);\n    return singleInstalment.toFixed(2);\n  };\n\n  const handlePercentChange = (value: string) => {\n    let converted = Number(value);\n\n    if (converted > 12) converted = 12;\n    else if (converted < 0) converted = 0;\n    setLoanPercent(converted);\n  };\n\n  return (\n    <Wrapper>\n      <RangeInput\n        onChange={handlePeriod}\n        min={Period.MIN}\n        max={Period.MAX}\n        title=\"Okres\"\n        unit=\"M\"\n      />\n      <RangeInput\n        onChange={handleValue}\n        max={Amount.MAX}\n        min={Amount.MIN}\n        title=\"Kwota\"\n        unit=\"PLN\"\n      />\n      <Section>\n        <Subsection>\n          <InputWithUnits>\n            <TextInput\n              title=\"Oprocentowanie\"\n              onChange={handlePercentChange}\n              type=\"number\"\n              disabled={!isPercentInputActive}\n              value={loanPercent}\n            />\n            <Units>%</Units>\n          </InputWithUnits>\n\n          <Checkbox\n            isChecked={isPercentInputActive}\n            onClick={() => {\n              setIsPercentInputActive(prev => !prev);\n            }}\n          />\n        </Subsection>\n        <Result>Rata kredytu: {calcLoanInstalment()}z≈Ç</Result>\n      </Section>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  transform: translate(-50%, -50%);\n\n  width: 50vw;\n  height: 30vh;\n  min-height: 400px;\n\n  border-radius: 10px;\n  border: 2px solid ${({ theme }) => theme.colors.orange[900]};\n\n  padding: 20px;\n`;\n\nconst InputWithUnits = styled.span`\n  position: relative;\n`;\n\nconst Units = styled.div`\n  position: absolute;\n  top: 50%;\n  right: 11%;\n\n  transform: translateY(-50%);\n\n  border-radius: 5px;\n\n  background: ${({ theme }) => theme.colors.gray[100]};\n  padding: 0 10px;\n`;\n\nconst Section = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Subsection = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Result = styled.span`\n  flex-basis: 50%;\n  border-radius: 20px;\n\n  font-size: 1.25rem;\n  text-align: center;\n\n  color: ${({ theme }) => theme.colors.white};\n  background: ${({ theme }) => theme.colors.orange[900]};\n\n  padding: 10px;\n`;\n\nexport default App;\n","import styled from \"styled-components\";\r\nimport { MouseEvent } from \"react\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport interface CheckboxProps {\r\n  isChecked: boolean;\r\n  label?: string;\r\n  onClick: (event: MouseEvent, currentState: boolean) => any;\r\n}\r\n\r\nconst Checkbox = ({ isChecked, onClick, label }: CheckboxProps) => {\r\n  if (label) {\r\n    return (\r\n      <Label>\r\n        {label}\r\n        <Wrapper\r\n          onClick={(e: MouseEvent) => onClick(e, !isChecked)}\r\n          isActive={isChecked}\r\n        >\r\n          <FontAwesomeIcon icon={isChecked ? faCheck : faTimes} />\r\n        </Wrapper>\r\n      </Label>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper\r\n      onClick={(e: MouseEvent) => onClick(e, !isChecked)}\r\n      isActive={isChecked}\r\n    >\r\n      <FontAwesomeIcon icon={isChecked ? faCheck : faTimes} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\ninterface WrapperProps {\r\n  isActive: boolean;\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  width: 35px;\r\n  height: 35px;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  border: 2px solid\r\n    ${({ theme, isActive }) =>\r\n      isActive ? theme.colors.orange[900] : theme.colors.gray[100]};\r\n  border-radius: 10px;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  background: ${({ theme, isActive }) =>\r\n    isActive ? theme.colors.orange[700] : theme.colors.gray[100]};\r\n  color: ${({ theme }) => theme.colors.gray[900]};\r\n\r\n  cursor: pointer;\r\n  user-select: none;\r\n`;\r\n\r\nconst Label = styled.label``;\r\n\r\nexport default Checkbox;\r\n","import {\r\n  MouseEvent as ReactMouseEvent,\r\n  FC,\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  ChangeEvent,\r\n} from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleRight, faAngleLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface RangeInputProps {\r\n  min?: number;\r\n  max?: number;\r\n  title: string;\r\n  unit?: string;\r\n  step?: number;\r\n  onChange: (value: number, e?: Event) => any;\r\n}\r\n\r\nconst DRAGGABLE_WIDTH = 50;\r\n\r\nconst RangeInput: FC<RangeInputProps> = ({\r\n  min = 0,\r\n  max = 100,\r\n  title,\r\n  unit,\r\n  step = 1,\r\n  onChange,\r\n}) => {\r\n  const [position, setPosition] = useState(0);\r\n  const [hoverPosition, setHoverPosition] = useState(0);\r\n  const [value, setValue] = useState(min);\r\n  const wrapperRef = useRef<HTMLDivElement>(null);\r\n  const hoverProgressBarRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const wrapper = wrapperRef.current;\r\n    if (wrapper) {\r\n      wrapper.addEventListener(\"mouseenter\", handleStartHover);\r\n    }\r\n    return () => {\r\n      wrapper?.removeEventListener(\"mouseenter\", handleStartHover);\r\n    };\r\n  }, []);\r\n\r\n  const handleStartDrag = (e: ReactMouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    document.addEventListener(\"mousemove\", handleDrag);\r\n    document.addEventListener(\"mouseup\", handleStopDrag);\r\n  };\r\n\r\n  const handleStartHover = () => {\r\n    const wrapper = wrapperRef.current;\r\n\r\n    wrapper?.addEventListener(\"mousemove\", handleHover);\r\n    wrapper?.addEventListener(\"mouseleave\", handleStopHover);\r\n  };\r\n\r\n  const handleHover = (e: MouseEvent) => {\r\n    if (wrapperRef.current) {\r\n      const { left } = wrapperRef.current.getBoundingClientRect();\r\n      const mousePosition = e.clientX - left - 17;\r\n\r\n      setHoverPosition(mousePosition);\r\n    }\r\n  };\r\n\r\n  const handleStopHover = () => {\r\n    const hoverBar = hoverProgressBarRef.current;\r\n    setHoverPosition(0);\r\n\r\n    if (hoverBar) {\r\n      hoverBar.removeEventListener(\"mousemove\", handleHover);\r\n      hoverBar.removeEventListener(\"mouseleave\", handleStopHover);\r\n    }\r\n  };\r\n\r\n  const handleDrag = (e: MouseEvent | ReactMouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    if (wrapperRef.current) {\r\n      const { left, width } = wrapperRef.current.getBoundingClientRect();\r\n      const DRAGGABLE_WIDTH = 50;\r\n      let newPosition = e.clientX - left - DRAGGABLE_WIDTH / 2;\r\n\r\n      if (newPosition + DRAGGABLE_WIDTH > width)\r\n        newPosition = width - DRAGGABLE_WIDTH;\r\n      else if (newPosition < 0) newPosition = 0;\r\n\r\n      const newValue =\r\n        Math.floor(newPosition / ((width - DRAGGABLE_WIDTH) / (max - min))) +\r\n        min;\r\n      setPosition(newPosition);\r\n      setValue(newValue);\r\n\r\n      onChange(newValue);\r\n    }\r\n  };\r\n\r\n  const handleManualValueSetting = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const wrapper = wrapperRef.current;\r\n\r\n    if (wrapper) {\r\n      const { width } = wrapper.getBoundingClientRect();\r\n      let value = Number(Number(e?.target?.value).toFixed(2));\r\n\r\n      if (value > max) value = max;\r\n      else if (value < min) value = min;\r\n\r\n      let newPosition = ((width - DRAGGABLE_WIDTH) / (max - min)) * value;\r\n      setPosition(newPosition < 0 ? 0 : newPosition);\r\n      setValue(value);\r\n      onChange(value);\r\n    }\r\n  };\r\n\r\n  const handleStopDrag = (e: MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    document.removeEventListener(\"mousemove\", handleDrag);\r\n    document.removeEventListener(\"mouseup\", handleStopDrag);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <RangeTitle>{title}</RangeTitle>\r\n      <Range ref={wrapperRef} onClick={handleDrag}>\r\n        <ProgressBar position={position} />\r\n        <HoverProgressBar position={hoverPosition} ref={hoverProgressBarRef} />\r\n        <Draggable onMouseDown={handleStartDrag} position={position}>\r\n          <FontAwesomeIcon icon={faAngleLeft} />\r\n          <FontAwesomeIcon icon={faAngleRight} />\r\n        </Draggable>\r\n      </Range>\r\n\r\n      <OutputWrapper>\r\n        <Output\r\n          value={value}\r\n          onChange={handleManualValueSetting}\r\n          type=\"number\"\r\n        />\r\n        {unit && <Units>{unit}</Units>}\r\n      </OutputWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst RangeTitle = styled.h3`\r\n  flex-basis: 100%;\r\n\r\n  border-radius: 20px;\r\n\r\n  font-size: 1.5rem;\r\n  text-align: center;\r\n\r\n  background: ${({ theme }) => theme.colors.white};\r\n  color: ${({ theme }) => theme.colors.gray[900]};\r\n`;\r\n\r\nconst Units = styled.span`\r\n  position: absolute;\r\n  top: 7.5px;\r\n  right: 7.5px;\r\n  border-radius: 10px;\r\n\r\n  font-size: 0.75rem;\r\n\r\n  background: ${({ theme }) => theme.colors.gray[200]};\r\n  color: ${({ theme }) => theme.colors.gray[600]};\r\n\r\n  padding: 5px;\r\n`;\r\n\r\nconst OutputWrapper = styled.div`\r\n  flex-basis: 20%;\r\n  height: 40px;\r\n  position: relative;\r\n`;\r\n\r\nconst Output = styled.input`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  border-radius: 20px;\r\n  border: none;\r\n\r\n  font-size: 1.25rem;\r\n\r\n  background: ${({ theme }) => theme.colors.gray[100]};\r\n  color: ${({ theme }) => theme.colors.white};\r\n\r\n  padding: 5px 5px 5px 20px;\r\n`;\r\n\r\nconst Range = styled.div`\r\n  position: relative;\r\n  width: 70%;\r\n  height: 15px;\r\n\r\n  margin: 50px 0;\r\n\r\n  border: 2px solid ${({ theme }) => theme.colors.gray[100]};\r\n  border-radius: 20px;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\ninterface DraggableProps {\r\n  position: number;\r\n}\r\n\r\nconst Draggable = styled.div<DraggableProps>`\r\n  position: absolute;\r\n  top: -17.5px;\r\n  left: ${({ position }) => position}px;\r\n  width: 50px;\r\n  height: 50px;\r\n\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  box-shadow: 0 0 4px 0px ${({ theme }) => theme.colors.gray[900]};\r\n\r\n  font-size: 2rem;\r\n\r\n  background-color: ${({ theme }) => theme.colors.orange[900]};\r\n  color: white;\r\n\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst ProgressBar = styled.div<DraggableProps>`\r\n  height: 100%;\r\n  width: ${({ position }) => position + 15}px;\r\n\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.colors.gray[300]};\r\n`;\r\n\r\nconst HoverProgressBar = styled(ProgressBar)`\r\n  z-index: -1;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  background: rgb(240, 240, 240);\r\n`;\r\n\r\nexport default RangeInput;\r\n","import { FC, ChangeEvent } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface TextInputProps {\r\n  title: string;\r\n  type?: \"text\" | \"number\" | \"email\" | \"password\";\r\n  disabled?: boolean;\r\n  value: string | number;\r\n\r\n  onChange: (value: string, e: ChangeEvent) => void;\r\n}\r\n\r\nconst TextInput: FC<TextInputProps> = ({\r\n  title,\r\n  onChange,\r\n\r\n  type = \"text\",\r\n  disabled = false,\r\n  value,\r\n}) => {\r\n  return (\r\n    <Label>\r\n      {title}\r\n      <Input\r\n        type={type}\r\n        onChange={(e: ChangeEvent<HTMLInputElement>) =>\r\n          onChange(e.target.value, e)\r\n        }\r\n        disabled={disabled}\r\n        isDisabled={disabled}\r\n        value={value}\r\n      />\r\n    </Label>\r\n  );\r\n};\r\n\r\ninterface InputProps {\r\n  isDisabled: boolean;\r\n}\r\n\r\nconst Input = styled.input<InputProps>`\r\n  width: 50%;\r\n  margin: 0 15px;\r\n\r\n  border: 2px solid\r\n    ${({ theme, isDisabled }) =>\r\n      isDisabled ? theme.colors.gray[100] : theme.colors.orange[900]};\r\n  border-radius: 5px;\r\n\r\n  background: ${({ theme }) => theme.colors.white};\r\n  color: ${({ theme }) => theme.colors.gray[900]};\r\n\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: ${({ theme }) => theme.colors.gray[900]};\r\n`;\r\n\r\nexport default TextInput;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n        font-family: 'Nunito Sans', sans-serif;\r\n    }\r\n    body {\r\n        width: 100%;\r\n        height: 100vh;\r\n\r\n        overflow: hidden;\r\n    }\r\n    input {\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n    input::-webkit-outer-spin-button,\r\n    input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n    }\r\n\r\n    input[type=number] {\r\n    -moz-appearance: textfield;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import { FC } from \"react\";\r\nimport { ThemeProvider, DefaultTheme } from \"styled-components\";\r\n\r\nconst theme: DefaultTheme = {\r\n  colors: {\r\n    orange: {\r\n      700: \"rgb(255, 200, 148)\",\r\n      800: \"rgb(245, 151, 63)\",\r\n      900: \"rgb(240, 128, 23)\",\r\n    },\r\n    gray: {\r\n      100: \"rgb(207, 207, 207)\",\r\n      200: \"rgb(187, 187, 187)\",\r\n      300: \"rgb(167, 167, 167)\",\r\n      400: \"rgb(147, 147, 147)\",\r\n      500: \"rgb(127, 127, 127)\",\r\n      600: \"rgb(107, 107, 107)\",\r\n      700: \"rgb(87, 87, 87)\",\r\n      800: \"rgb(67, 67, 67)\",\r\n      900: \"rgb(47, 47, 47)\",\r\n    },\r\n    white: \"rgb(255, 255, 255)\",\r\n  },\r\n} as const;\r\n\r\ninterface ThemeProps {}\r\n\r\nconst Theme: FC<ThemeProps> = ({ children }) => {\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n};\r\n\r\nexport default Theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport GlobalStyle from \"./GlobalStyles\";\nimport ThemeProvider from \"./components/ThemeProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <GlobalStyle />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}